{
  "filename": "rpc.md",
  "__html": "<h1>RPC框架扩展</h1>\n<p>为了方便说明以springcloud框架为例说明如何扩展第三方RPC框架。</p>\n<ol>\n<li>增加tx-spi-sleuth的扩展实现。</li>\n</ol>\n<p>关于sleuth 参考 <a href=\"https://cloud.spring.io/spring-cloud-sleuth/2.0.x/single/spring-cloud-sleuth.html\">https://cloud.spring.io/spring-cloud-sleuth/2.0.x/single/spring-cloud-sleuth.html</a></p>\n<p>tx-spi-sleuth的扩展主要控制:重写负载机制、sleuth参数传递</p>\n<p>关于srpingcloud的负载机制扩展:</p>\n<p>srpingcloud的负载机制是基于ribbon，关于ribbon原理请参考\n关于ZoneAvoidanceRule的参考 <a href=\"https://cloud.spring.io/spring-cloud-netflix/2.0.x/single/spring-cloud-netflix.html\">https://cloud.spring.io/spring-cloud-netflix/2.0.x/single/spring-cloud-netflix.html</a></p>\n<pre><code>@Slf4j\n@Scope(&quot;prototype&quot;)\npublic class TXLCNZoneAvoidanceRule extends ZoneAvoidanceRule {\n\n    //针对sleuth 负载控制的ExtraField参数设置\n    private final SleuthParamListener sleuthParamListener;\n\n    private final Registration registration;\n\n    public TXLCNZoneAvoidanceRule(SleuthParamListener sleuthParamListener,\n                                  Registration registration) {\n        this.sleuthParamListener = sleuthParamListener;\n        this.registration = registration;\n    }\n\n    @Override\n    public Server choose(Object key) {\n        return getServer(key);\n    }\n\n    private Server getServer(Object key) {\n        String localKey = String.format(&quot;%s:%s:%s&quot;, registration.getServiceId(), registration.getHost(), registration.getPort());\n        List&lt;String&gt; appList = sleuthParamListener.beforeBalance(localKey);\n        Server balanceServer = null;\n        List&lt;Server&gt; servers = getLoadBalancer().getAllServers();\n        log.debug(&quot;load balanced rule servers: {}&quot;, servers);\n        for (Server server : servers) {\n            for (String appKey : appList) {\n                String serverKey = String.format(&quot;%s:%s&quot;, server.getMetaInfo().getAppName(), server.getHostPort());\n                if (serverKey.equals(appKey)) {\n                    balanceServer = server;\n                }\n            }\n        }\n        if (balanceServer == null) {\n            Server server = super.choose(key);\n            sleuthParamListener.alfterNewBalance(String.format(&quot;%s:%s&quot;, server.getMetaInfo().getAppName(), server.getHostPort()));\n            return server;\n        } else {\n            return balanceServer;\n        }\n    }\n\n}\n</code></pre>\n<p>关于srpingcloud的sleuth参数传递扩展:</p>\n<p>由于ribbon与sleuth都是基于ClientHttpRequestInterceptor来控制的，但ribbon的拦截器的order小于sleuth，特此处理一下顺序。</p>\n<pre><code>@Component\npublic class RibbonFirstRestTemplateCustomizer implements RestTemplateCustomizer {\n\n\n    private LoadBalancerInterceptor loadBalancerInterceptor;\n\n    @Autowired\n    public RibbonFirstRestTemplateCustomizer(LoadBalancerInterceptor loadBalancerInterceptor) {\n        this.loadBalancerInterceptor = loadBalancerInterceptor;\n    }\n\n    @Override\n    public void customize(RestTemplate restTemplate) {\n        List&lt;ClientHttpRequestInterceptor&gt; list = new ArrayList&lt;&gt;(restTemplate.getInterceptors());\n        list.add(0,loadBalancerInterceptor);\n        restTemplate.setInterceptors(list);\n    }\n\n}\n</code></pre>\n<ol start=\"2\">\n<li>提供client端的pom。例如tx-client-springcloud：</li>\n</ol>\n<pre><code>&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;\n&lt;project xmlns=&quot;http://maven.apache.org/POM/4.0.0&quot;\n         xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;\n         xsi:schemaLocation=&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;&gt;\n    &lt;parent&gt;\n        &lt;artifactId&gt;tx-lcn&lt;/artifactId&gt;\n        &lt;groupId&gt;com.codingapi.txlcn&lt;/groupId&gt;\n        &lt;version&gt;5.0.0.beta&lt;/version&gt;\n    &lt;/parent&gt;\n    &lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt;\n    &lt;packaging&gt;pom&lt;/packaging&gt;\n    &lt;artifactId&gt;tx-client-springcloud&lt;/artifactId&gt;\n\n\n    &lt;dependencies&gt;\n\n        &lt;dependency&gt;\n            &lt;groupId&gt;com.codingapi.txlcn&lt;/groupId&gt;\n            &lt;artifactId&gt;tx-client&lt;/artifactId&gt;\n        &lt;/dependency&gt;\n\n        &lt;dependency&gt;\n            &lt;groupId&gt;com.codingapi.txlcn&lt;/groupId&gt;\n            &lt;artifactId&gt;tx-spi-sleuth-springcloud&lt;/artifactId&gt;\n        &lt;/dependency&gt;\n\n    &lt;/dependencies&gt;\n\n&lt;/project&gt;\n\n</code></pre>\n",
  "link": "/zh-cn/docs/expansion/rpc.html",
  "meta": {}
}